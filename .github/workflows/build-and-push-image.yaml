# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven
on:
  push:
    branches: [ "qa" ]
env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets. DOCKER_PASSWORD }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Build and push docker image to DockerHub
      id: build-image
      run: | 
        VERSION_READABLE=$(git describe --tag)
        docker build --platform "linux/amd64" -t utsavgarg007/docker-image:$VERSION_READABLE .
        echo "::set-output name=IMAGE::utsavgarg007/docker-image:$VERSION_READABLE"
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
          image-ref: '${{ steps.build-image.outputs.IMAGE }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          output: ${{ steps.date.outputs.date }}
          severity: 'CRITICAL,HIGH'
      
